BASIC_QUOTE_SCENARIOS:
  model_template: soa.py
  tests:
    QUOTE_SINGLE_ITEM_01: Terse email with quote request for 1 item with specific quantity. The email should be straightforward and professional. There is only one turn with expected data containing a quote.
    QUOTE_MULTIPLE_ITEMS_01: Terse email with quote request for 3-5 items with varying quantities. Items should be from different categories with different units of measure. There is only one turn with expected data containing a quote.
    QUOTE_MULTIPLE_ITEMS_02: Verbose email with quote request for 5-7 items with varying quantities. Email should include business context and urgency. Items should use both PCS and BOX units. There is only one turn.

QUOTE_TO_ORDER_SCENARIOS:
  model_template: soa.py
  tests:
    QUOTE_TO_ORDER_SINGLE_01: Two-turn scenario where customer requests quote for 1-2 items, then converts to order. First turn generates quote, second turn converts to sales order with total amount.
    QUOTE_TO_ORDER_MULTIPLE_01: Two-turn scenario where customer requests quote for 3-5 items, then converts to order. Customer should express satisfaction with pricing in second email.
    QUOTE_TO_ORDER_WITH_CHANGES_01: Two-turn scenario where customer requests quote, then converts to order with quantity modifications. Customer should request slight changes before ordering.

UNIT_OF_MEASURE_SCENARIOS:
  model_template: soa.py
  tests:
    MIXED_UOM_QUOTE_01: Email requesting items using different units of measure. Some items in PCS, others in BOX. Customer should be specific about units needed.
    BULK_ORDER_QUOTE_01: Email requesting large quantities primarily in BOX units. Should emphasize bulk pricing and wholesale quantities.
    INDIVIDUAL_ITEMS_QUOTE_01: Email requesting specific quantities in PCS units. Should focus on precise quantities for specific needs.

ERROR_HANDLING_SCENARIOS:
  model_template: soa.py
  tests:
    UNAVAILABLE_ITEMS_01: Email requesting items not in the catalog. Should result in polite explanation and alternative suggestions. No quotes should be generated.
    MISSING_QUANTITY_01: Email requesting items without specifying quantities. System should default to quantity 1 and ask for clarification in response.
    AMBIGUOUS_ITEMS_01: Email using vague item descriptions that could match multiple products. System should ask for clarification with available options.

DELIVERY_TIMELINE_SCENARIOS:
  model_template: soa.py
  tests:
    SPECIFIC_DELIVERY_DATE_01: Email requesting quote with specific delivery date mentioned. Response should acknowledge delivery requirements.
    RUSH_ORDER_01: Email requesting expedited processing and delivery. Should emphasize time-sensitive nature of request.
    FLEXIBLE_DELIVERY_01: Email with flexible delivery timeline. Should show understanding of delivery flexibility.